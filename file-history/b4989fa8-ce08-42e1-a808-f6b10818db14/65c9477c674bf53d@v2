-- CFF Scheduler Database Schema
-- SQLite database for managing resources, requests, constraints, and planning results

-- Resources table: internal and external workers
CREATE TABLE IF NOT EXISTS resources (
    id TEXT PRIMARY KEY,
    name TEXT NOT NULL,
    team TEXT NOT NULL,
    home_location TEXT NOT NULL,
    contract_type TEXT NOT NULL CHECK(contract_type IN ('day', 'mixed')),
    weekly_hours INTEGER NOT NULL,
    resource_type TEXT NOT NULL DEFAULT 'internal' CHECK(resource_type IN ('internal', 'external')),
    cost_per_hour REAL NOT NULL DEFAULT 30.0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Resource qualifications (many-to-many relationship)
CREATE TABLE IF NOT EXISTS resource_qualifications (
    resource_id TEXT NOT NULL,
    qualification TEXT NOT NULL,
    PRIMARY KEY (resource_id, qualification),
    FOREIGN KEY (resource_id) REFERENCES resources(id) ON DELETE CASCADE
);

-- Resource holidays
CREATE TABLE IF NOT EXISTS resource_holidays (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    resource_id TEXT NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    FOREIGN KEY (resource_id) REFERENCES resources(id) ON DELETE CASCADE
);

-- Locations and sites
CREATE TABLE IF NOT EXISTS locations (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT UNIQUE NOT NULL,
    description TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Distance matrix between locations
CREATE TABLE IF NOT EXISTS location_distances (
    from_location TEXT NOT NULL,
    to_location TEXT NOT NULL,
    distance_km REAL NOT NULL,
    PRIMARY KEY (from_location, to_location),
    FOREIGN KEY (from_location) REFERENCES locations(name) ON DELETE CASCADE,
    FOREIGN KEY (to_location) REFERENCES locations(name) ON DELETE CASCADE
);

-- Requests (work orders)
CREATE TABLE IF NOT EXISTS requests (
    id TEXT PRIMARY KEY,
    location TEXT NOT NULL,
    start_date DATE NOT NULL,
    start_time TIME NOT NULL,
    duration_hours REAL NOT NULL,
    people_needed INTEGER NOT NULL,
    description TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (location) REFERENCES locations(name)
);

-- Request required qualifications
CREATE TABLE IF NOT EXISTS request_qualifications (
    request_id TEXT NOT NULL,
    qualification TEXT NOT NULL,
    PRIMARY KEY (request_id, qualification),
    FOREIGN KEY (request_id) REFERENCES requests(id) ON DELETE CASCADE
);

-- Legal constraints (Swiss Labor Law)
CREATE TABLE IF NOT EXISTS legal_constraints (
    id INTEGER PRIMARY KEY CHECK (id = 1), -- Singleton table
    max_daily_hours REAL NOT NULL DEFAULT 10.0,
    max_weekly_hours REAL NOT NULL DEFAULT 50.0,
    min_daily_rest_hours REAL NOT NULL DEFAULT 11.0,
    min_weekly_rest_hours REAL NOT NULL DEFAULT 35.0,
    max_consecutive_workdays INTEGER NOT NULL DEFAULT 6,
    mandatory_break_after_hours REAL NOT NULL DEFAULT 5.0,
    mandatory_break_duration_minutes INTEGER NOT NULL DEFAULT 30,
    travel_time_counts_as_work BOOLEAN NOT NULL DEFAULT 1,
    night_shift_start TIME NOT NULL DEFAULT '23:00',
    night_shift_end TIME NOT NULL DEFAULT '06:00',
    description TEXT,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Plans: saved scheduling runs with configurations
CREATE TABLE IF NOT EXISTS plans (
    id TEXT PRIMARY KEY,
    name TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    status TEXT NOT NULL DEFAULT 'pending' CHECK(status IN ('pending', 'running', 'completed', 'failed')),
    objective_type TEXT NOT NULL DEFAULT 'travel' CHECK(objective_type IN ('cost', 'travel', 'both')),
    max_travel_minutes INTEGER,
    team_cohesion_min REAL,
    time_limit_seconds INTEGER NOT NULL DEFAULT 300,
    solve_time_seconds REAL,
    objective_value REAL,
    feasible BOOLEAN,
    error_message TEXT
);

-- Plan assignments: resource-request assignments per plan
CREATE TABLE IF NOT EXISTS plan_assignments (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    plan_id TEXT NOT NULL,
    resource_id TEXT NOT NULL,
    request_id TEXT NOT NULL,
    total_work_hours REAL NOT NULL,
    FOREIGN KEY (plan_id) REFERENCES plans(id) ON DELETE CASCADE,
    FOREIGN KEY (resource_id) REFERENCES resources(id),
    FOREIGN KEY (request_id) REFERENCES requests(id)
);

-- Plan KPIs: performance metrics per plan
CREATE TABLE IF NOT EXISTS plan_kpis (
    plan_id TEXT PRIMARY KEY,
    -- Coverage metrics
    total_requests INTEGER NOT NULL,
    covered_internal INTEGER NOT NULL DEFAULT 0,
    covered_external INTEGER NOT NULL DEFAULT 0,
    uncovered INTEGER NOT NULL DEFAULT 0,
    -- Compliance metrics
    ldt_violations INTEGER NOT NULL DEFAULT 0,
    skill_mismatches INTEGER NOT NULL DEFAULT 0,
    fatigue_warnings INTEGER NOT NULL DEFAULT 0,
    -- Efficiency metrics
    avg_travel_time_minutes REAL NOT NULL DEFAULT 0.0,
    total_cost_chf REAL NOT NULL DEFAULT 0.0,
    team_continuity_score REAL NOT NULL DEFAULT 0.0,
    -- Cost breakdown
    internal_cost REAL NOT NULL DEFAULT 0.0,
    external_cost REAL NOT NULL DEFAULT 0.0,
    internal_hours REAL NOT NULL DEFAULT 0.0,
    external_hours REAL NOT NULL DEFAULT 0.0,
    FOREIGN KEY (plan_id) REFERENCES plans(id) ON DELETE CASCADE
);

-- Indexes for performance
CREATE INDEX IF NOT EXISTS idx_resources_type ON resources(resource_type);
CREATE INDEX IF NOT EXISTS idx_resources_team ON resources(team);
CREATE INDEX IF NOT EXISTS idx_requests_date ON requests(start_date);
CREATE INDEX IF NOT EXISTS idx_requests_location ON requests(location);
CREATE INDEX IF NOT EXISTS idx_plans_status ON plans(status);
CREATE INDEX IF NOT EXISTS idx_plans_created ON plans(created_at DESC);
CREATE INDEX IF NOT EXISTS idx_plan_assignments_plan ON plan_assignments(plan_id);
CREATE INDEX IF NOT EXISTS idx_plan_assignments_resource ON plan_assignments(resource_id);
CREATE INDEX IF NOT EXISTS idx_plan_assignments_request ON plan_assignments(request_id);

-- Insert default legal constraints
INSERT OR IGNORE INTO legal_constraints (
    id, max_daily_hours, max_weekly_hours, min_daily_rest_hours,
    min_weekly_rest_hours, max_consecutive_workdays, mandatory_break_after_hours,
    mandatory_break_duration_minutes, travel_time_counts_as_work,
    night_shift_start, night_shift_end, description
) VALUES (
    1, 12.0, 50.0, 11.0, 35.0, 6, 5.0, 30, 1,
    '23:00', '06:00',
    'Swiss Labor Law (LDT) constraints for maintenance workers - ADJUSTED FOR TESTING: max_daily_hours increased to 12h'
);
