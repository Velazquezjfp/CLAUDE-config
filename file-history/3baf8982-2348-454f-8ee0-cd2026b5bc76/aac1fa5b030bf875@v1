"""
Test Case: TC-NFR-001-02
Requirement: NFR-001 - Establish single source of truth for domain value validation
Description: Call GET /api/reference, verify response contains locations array with exactly 11 values matching locations table
Generated: 2025-10-27T00:00:00Z
"""

def test_TC_NFR_001_02():
    """Verify /api/reference endpoint returns all 11 canonical locations"""
    # TODO: Implement API test
    # Based on requirement Changes Required:
    # - Endpoint: GET /api/reference (new endpoint in api/routes/reference.py)
    # - Expected response: JSON with locations array
    # - Expected: locations array contains exactly 11 values from locations table

    # Canonical locations (11 values):
    # ['Bellinzona', 'Bern', 'Fribourg', 'Interlaken', 'Lausanne', 'Lugano',
    #  'Montreux', 'Neuch√¢tel', 'St. Gallen', 'Winterthur', 'Zurich']

    # Steps:
    # 1. Prepare GET request to /api/reference
    # 2. Send request to API
    # 3. Verify response status code = 200
    # 4. Verify response is valid JSON
    # 5. Verify response contains 'locations' key
    # 6. Verify locations is an array
    # 7. Verify locations array contains exactly 11 elements
    # 8. Verify each location name matches canonical list exactly (including special characters)
    pass

if __name__ == "__main__":
    try:
        test_TC_NFR_001_02()
        print("TC-NFR-001-02: PASSED")
    except AssertionError as e:
        print(f"TC-NFR-001-02: FAILED - {e}")
    except Exception as e:
        print(f"TC-NFR-001-02: ERROR - {e}")
