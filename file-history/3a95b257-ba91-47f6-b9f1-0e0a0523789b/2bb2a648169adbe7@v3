"""
Test Case: TC-F-002-06
Requirement: F-002 - Fix total inferences count calculation on dashboard
Description: Test with exactly 100 records, verify count shows 100 (edge case where bug would be hidden)
Generated: 2025-10-01T14:59:00Z
"""

import sqlite3
import requests
import time
import os

def test_TC_F_002_06():
    """Test edge case: exactly 100 records (where bug would match correct count)"""

    # Get project root (3 levels up from this test file)
    project_root = os.path.abspath(os.path.join(os.path.dirname(__file__), '../../..'))
    db_path = os.path.join(project_root, "shared/data/inference_results.db")
    dashboard_api = "http://localhost:8001/api/stats"

    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()

    try:
        # Clear and insert exactly 100 records
        cursor.execute("DELETE FROM inference_results")
        conn.commit()

        for i in range(100):
            cursor.execute("""
                INSERT INTO inference_results
                (sentence, answer, mode, score, reason, timestamp, batch_id)
                VALUES (?, ?, ?, ?, ?, ?, ?)
            """, (
                f"TC-F-002-06 record {i}",
                "accepted" if i % 2 == 0 else "rejected",
                "BERT",
                0.90,
                "" if i % 2 == 0 else "BERT rejection",
                time.time(),
                None
            ))

        conn.commit()

        # Verify database
        cursor.execute("SELECT COUNT(*) FROM inference_results")
        db_count = cursor.fetchone()[0]
        assert db_count == 100, f"Expected 100 records, got {db_count}"

        # Query API
        response = requests.get(dashboard_api, timeout=10)
        assert response.status_code == 200

        data = response.json()
        api_total = data.get("summary", {}).get("total_inferences", 0)

        print(f"Edge case (100 records): Database={db_count}, API={api_total}")
        assert api_total == 100, f"API shows {api_total}, expected 100"

        # This test validates the fix: before fix, bug was hidden at exactly 100 records
        # because len(recent) would equal actual count

    finally:
        # Cleanup
        cursor.execute("DELETE FROM inference_results WHERE sentence LIKE 'TC-F-002-06%'")
        conn.commit()
        conn.close()

if __name__ == "__main__":
    try:
        test_TC_F_002_06()
        print("TC-F-002-06: PASSED")
    except AssertionError as e:
        print(f"TC-F-002-06: FAILED - {e}")
    except Exception as e:
        print(f"TC-F-002-06: ERROR - {e}")
