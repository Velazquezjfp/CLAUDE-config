import { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { getPlans, deletePlan } from '../services/api';
import { FolderOpen, Trash2, Eye } from 'lucide-react';

export default function PlansPage() {
  const navigate = useNavigate();
  const [plans, setPlans] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    fetchPlans();
  }, []);

  const fetchPlans = async () => {
    setLoading(true);
    try {
      const response = await getPlans();
      setPlans(response.data.data);
    } catch (error) {
      console.error('Failed to fetch plans:', error);
    } finally {
      setLoading(false);
    }
  };

  const handleDelete = async (id) => {
    if (!confirm('Are you sure you want to delete this plan?')) return;

    try {
      await deletePlan(id);
      fetchPlans();
    } catch (error) {
      console.error('Failed to delete plan:', error);
      alert('Failed to delete plan');
    }
  };

  if (loading) {
    return (
      <div className="bg-white rounded-lg shadow p-8 text-center text-gray-500">
        Loading plans...
      </div>
    );
  }

  return (
    <div>
      <div className="flex items-center justify-between mb-6">
        <div>
          <h2 className="text-2xl font-bold text-gray-900">Saved Plans</h2>
          <p className="text-sm text-gray-600 mt-1">
            View and manage your optimization results
          </p>
        </div>
      </div>

      {plans.length === 0 ? (
        <div className="bg-white rounded-lg shadow p-12 text-center">
          <FolderOpen className="h-16 w-16 text-gray-400 mx-auto mb-4" />
          <h3 className="text-lg font-semibold text-gray-900 mb-2">No Plans Yet</h3>
          <p className="text-gray-600 mb-4">
            Run the solver to create your first optimization plan
          </p>
          <button className="px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors">
            Go to Solver
          </button>
        </div>
      ) : (
        <div className="grid grid-cols-1 gap-4">
          {plans.map(plan => (
            <div
              key={plan.id}
              className="bg-white rounded-lg shadow hover:shadow-md transition-shadow"
            >
              <div className="p-6">
                <div className="flex items-start justify-between">
                  <div className="flex-1">
                    <div className="flex items-center space-x-3 mb-2">
                      <FolderOpen className="h-5 w-5 text-primary-600" />
                      <h3 className="text-lg font-semibold text-gray-900">{plan.name}</h3>
                      <span
                        className={`px-3 py-1 rounded-full text-xs font-medium ${
                          plan.status === 'completed'
                            ? 'bg-green-100 text-green-800'
                            : plan.status === 'running'
                            ? 'bg-blue-100 text-blue-800'
                            : 'bg-red-100 text-red-800'
                        }`}
                      >
                        {plan.status}
                      </span>
                    </div>

                    <div className="grid grid-cols-4 gap-4 mt-4">
                      <div>
                        <div className="text-xs text-gray-500">Objective</div>
                        <div className="font-medium text-gray-900 capitalize">{plan.objective}</div>
                      </div>
                      <div>
                        <div className="text-xs text-gray-500">Created</div>
                        <div className="font-medium text-gray-900">
                          {new Date(plan.created_at).toLocaleDateString()}
                        </div>
                      </div>
                      <div>
                        <div className="text-xs text-gray-500">Time Limit</div>
                        <div className="font-medium text-gray-900">{plan.time_limit_seconds}s</div>
                      </div>
                      <div>
                        <div className="text-xs text-gray-500">Team Cohesion</div>
                        <div className="font-medium text-gray-900">{plan.team_cohesion_percentage}%</div>
                      </div>
                    </div>
                  </div>

                  <div className="flex items-center space-x-2 ml-4">
                    <button
                      onClick={() => navigate(`/plans/${plan.id}`)}
                      className="flex items-center space-x-2 px-4 py-2 text-primary-600 bg-primary-50 rounded-lg hover:bg-primary-100 transition-colors"
                    >
                      <Eye className="h-4 w-4" />
                      <span>View Details</span>
                    </button>
                    <button
                      onClick={() => handleDelete(plan.id)}
                      className="p-2 text-red-600 hover:bg-red-50 rounded-lg transition-colors"
                    >
                      <Trash2 className="h-4 w-4" />
                    </button>
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>
      )}
    </div>
  );
}
