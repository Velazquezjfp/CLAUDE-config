"""
Test Case: TC-F-002-04
Requirement: F-002 - Standardize location values across frontend, backend, and database
Description: Create request with location='Lusanne' (typo), verify API returns 400 error with message "Location 'Lusanne' not found"
Generated: 2025-10-27T00:00:00Z
"""

def test_TC_F_002_04():
    """Verify API rejects invalid location (typo) with clear error message"""
    # TODO: Implement API test
    # Based on requirement Changes Required:
    # - Backend: API should validate location against locations table
    # - Database: requests.location foreign key references locations.name
    # - Expected: API returns 400 error with message "Location 'Lusanne' not found"

    # Invalid location: 'Lusanne' (typo, should be 'Lausanne')

    # Steps:
    # 1. Prepare POST request to /api/requests with JSON payload
    # 2. Set location='Lusanne' (typo - invalid location)
    # 3. Include valid values for other required fields
    # 4. Send request to API
    # 5. Verify response status code = 400 (Bad Request)
    # 6. Verify response body contains error message: "Location 'Lusanne' not found"
    # 7. Verify no request was created in database
    pass

if __name__ == "__main__":
    try:
        test_TC_F_002_04()
        print("TC-F-002-04: PASSED")
    except AssertionError as e:
        print(f"TC-F-002-04: FAILED - {e}")
    except Exception as e:
        print(f"TC-F-002-04: ERROR - {e}")
